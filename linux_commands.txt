-------------------------------------------------
Changing file or directory permissions

command:

				chmod 777 file_name.txt

--> chmod is the name of the command to modify the permissions

--> 777 is a octal number representation of the permissions (Explaination below)

--> file_name.txt is the name of the file for which the permission is to be changed
		Note: It can be a file name or a directory name.

Permission Type Explaination:
	
	r - Read Allowed
	w - Write Allowed
	x - Execute Allowed

	There are three parts for permissions on whom it should be activated. They are Owner, members of a group, others.
		-rwx(owner) rwx(group member) rwx (others)

	1. the first part is owner
	2. second part is group members
	3. third part is others.

	If u execute the following command

		$ ls -al

	you will get as below,

	-rwx rwx rwx    then other attributes will be displayed.


	the first hyphen indicates whether it is file or a directory

	Eg: 
	 if its a file then 
	 										-rwx rwx rwx 
	 if its a direcory then 
	 										drwx rwx rwx 

	So Octal Explaination:

	7 (octal) - 111 (binary)
	6 (octal) - 110 (binary)

	the three bits in binary indicate the Read , Write and execute.

	1. if it is 111 den read write and execute is allowed. the octal equivalent is 7

	2. if it is 101 den read and execute is allowed and write is denied. the octal equivalent is 5

	so 777 means

		for owner provide read,write and execute

		for group members provide read,write and execute

		for others provide read,write and execute

	so 755 means

		for owner provide read,write and execute

		for group members provide read and execute only
		
		for group members provide read and execute only

-------------------------------------------------

System Metrics Monitoring

command:
	$ top

	*Top command's configuration can be changed by pressing (capital)'W' 
	*The configuration is saved in the respective users directory path in .toprc file
	 Eg: /root/.toprc

	after hitting top follow the below command tips

	1. presss 'o' for the menu of metrics displayed and the order
	2. press 'u' for filtering the process based on the user name specified.
	3. press 'd' for changing the metrics refreshing interval of the top command.
	4. pressing 'c' will display the full path of the executable of the process in the commands section.
	5. running 'top -n 10 -b > outputfile.txt' will save the top output for n specified times to the output file.
	6. Pressing 'Shift + P' will sort top result based on CPU utilization.
-------------------------------------------------

Kill Signals Overview

kill is a system call used to send signals for processes running in linux.

There are few types of kill commands like kill, killall, xkill, pkill

Here kill is discussed.

command: kill

	$ kill -l 

	This command lists all the signals that are available in the system.
	Note: Signal numbers will differ on different distributions. I had different numbers in MAC and RHEL.

SIGNALS DESCRIPTION:
SIGSTOP: This will pause the current process. Process cannot ignore this signal. 
	This state can be seen in 'top' command with process state in 'S' column as 'T'

SIGCONT: Stopped process can be resumed with this signal. 
	This state can be seen in 'top' command with process state in 'S' column as 'S'

SIGCHILD: When a parent process loses a child process, it is notified with a SIGCHILD signal for it to cleanup or release resources related to the child process

SIGABRT: Any process which would terminate on its own due to unexpected errors by the application itself will send this signal.

SIGINT: Similar to control + C key combination. Interrupting the process and asking it to stop, however the process can ignore the signal. 

SIGTERM: Requesting the process to gracefully shutdown by saving its progress/ release its resources. however the process can ignore the signal.

SIGTRAP: When a process is encountered an event for which a debugger is waiting for, this signal will be sent to the process. This is used for debugging purpose.

SIGQUIT: Terminate the process with coredump ability.
-------------------------------------------------

fswatch

This command is used for tracking linux file system events. 
This command uses inotify linux file system API

For day to day usage i use it for decreasing my work load.
This will be useful for who dont use IDE's 

1. Compile programs when saved.

	fswatch filename.c | xargs -n1 gcc -o filename



